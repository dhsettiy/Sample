<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="Dharunya" failures="1" tests="8" name="com.test.data.SampleTwo" time="0.025" errors="0" timestamp="2024-07-01T21:54:53 IST" skipped="5">
  <testcase classname="com.test.data.SampleTwo" name="testOne" time="0.001">
    <skipped/>
  </testcase> <!-- testOne -->
  <system-out/>
  <testcase classname="com.test.data.SampleTwo" name="testOne" time="0.002">
    <skipped/>
  </testcase> <!-- testOne -->
  <system-out/>
  <testcase classname="com.test.data.SampleTwo" name="testOne" time="0.001">
    <failure message="expected [true] but found [false]" type="java.lang.AssertionError">
      <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at org.testng.Assert.assertTrue(Assert.java:66)
at com.test.data.SampleTwo.testOne(SampleTwo.java:15)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:263)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
    </failure>
  </testcase> <!-- testOne -->
  <system-out/>
  <testcase classname="com.test.data.SampleTwo" name="test" time="0.008"/>
  <system-out/>
  <testcase classname="com.test.data.SampleTwo" name="testOne" time="0.010">
    <skipped/>
  </testcase> <!-- testOne -->
  <system-out/>
  <testcase classname="com.test.data.SampleTwo" name="testOne" time="0.001">
    <skipped/>
  </testcase> <!-- testOne -->
  <system-out/>
  <testcase classname="com.test.data.SampleTwo" name="testTwo" time="0.001"/>
  <system-out/>
  <testcase classname="com.test.data.SampleTwo" name="testOne" time="0.001">
    <skipped/>
  </testcase> <!-- testOne -->
  <system-out/>
</testsuite> <!-- com.test.data.SampleTwo -->
